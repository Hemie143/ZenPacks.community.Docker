name: ZenPacks.community.Docker

zProperties:
  DEFAULTS:
    category: DockerCustom

  zDockerPersistDuration:
    type: int
    default: 12
    description: Defines in hours how long a container should remain at least visible in Zenoss

classes:
  DockerContainer:
    base: [zenpacklib.Component]
    label: Docker Volatile Container
    order: 1
    properties:
      container_status:
        label: Status
        default: UNKNOWN
        grid_display: true
        order: 1
      image:
        label: Image
        order: 2
      container_id:
        label: Container ID
        order: 3
      command:
        label: Command
        order: 4
      created:
        label: Created
        order: 5
      ports:
        label: Ports
        order: 6
      cgroup_path:
        label: CGroup Path
        default: /sys/fs/cgroup
        order: 7
      last_seen_model:
        label: Last seen Model
        type: int
        grid_display: false
        default: 0
      last_seen_collect:
        label: Last seen Collect
        type: int
        datapoint: stats_last_seen
        grid_display: false
    monitoring_templates:
      - DockerContainer

class_relationships:
  - Products.ZenModel.Device.Device 1:MC DockerContainer

device_classes:
  /Server/SSH:
    templates:
      DockerContainer:
        targetPythonClass: ZenPacks.community.Docker.DockerContainer
        datasources:
          stats:
            type: Python
            plugin_classname: ZenPacks.community.Docker.dsplugins.containers.stats
            cycletime: 120
            datapoints:
              # CPU % - MEM USAGE / LIMIT - MEM %  - NET I/O - BLOCK I/O - PIDS
              last_seen:
                rrdtype: GAUGE_MIN_0
              cpu_usage_percent:
                rrdtype: GAUGE_MIN_0_MAX_100
              memory_limit:
                rrdtype: GAUGE_MIN_0
              memory_usage:
                rrdtype: GAUGE_MIN_0
              memory_usage_percent:
                rrdtype: GAUGE_MIN_0_MAX_100
              network_inbound:
                rrdtype: GAUGE_MIN_0
              network_outbound:
                rrdtype: GAUGE_MIN_0
              block_read:
                rrdtype: GAUGE_MIN_0
              block_write:
                rrdtype: GAUGE_MIN_0
              num_procs:
                rrdtype: GAUGE_MIN_0
        graphs:
          CPU Usage:
            units: percent
            miny: 0
            maxy: 100
            graphpoints:
              CPU Usage:
                dpName: stats_cpu_usage_percent
                format: "%7.2lf%s"
                sequence: 1
          Memory Usage:
            units: bytes
            miny: 0
            base: true
            graphpoints:
              Limit:
                dpName: stats_memory_limit
                format: "%7.2lf%s"
                sequence: 1
              Used:
                dpName: stats_memory_usage
                format: "%7.2lf%s"
                sequence: 2
          Memory Usage Percentage:
            units: percent
            miny: 0
            maxy: 100
            graphpoints:
              Memory Usage:
                dpName: stats_memory_usage_percent
                format: "%7.2lf%s"
                sequence: 1
          Network:
            units: bytes
            miny: 0
            base: true
            graphpoints:
              Network Inbound:
                dpName: stats_network_inbound
                format: "%7.2lf%s"
                sequence: 1
              Network Outbound:
                dpName: stats_network_outbound
                format: "%7.2lf%s"
                sequence: 2
          Blocks:
            units: bytes
            miny: 0
            base: true
            graphpoints:
              Block reads:
                dpName: stats_block_read
                format: "%7.2lf%s"
                sequence: 1
              Block writes:
                dpName: stats_block_write
                format: "%7.2lf%s"
                sequence: 2
          Processes:
            units: processes
            miny: 0
            graphpoints:
              Number of processes:
                dpName: stats_num_procs
                format: "%7.2lf%s"
                sequence: 1
